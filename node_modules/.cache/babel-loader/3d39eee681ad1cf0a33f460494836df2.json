{"ast":null,"code":"var _jsxFileName = \"/home/reut/practice-redux/src/store/Todoes.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useAppSelector, useAppDispatch } from \"./hooks\";\nimport { changeDone, selectTodo, selectUserName } from \"./slice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TodoList = () => {\n  _s();\n\n  const todo = useAppSelector(selectTodo);\n  const userName = useAppSelector(selectUserName);\n  const dispatch = useAppDispatch();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"user: \", userName, todo.map((todo, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [console.log('todo: ', todo), \"title: \", todo.title, \",\", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => dispatch(changeDone(todo.done)),\n        children: [\" done: \", todo.done ? \"done\" : \"not done\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 16\n      }, this)]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 36\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TodoList, \"Z0zVElQjqAE35FPkl774jdOkHhM=\", false, function () {\n  return [useAppSelector, useAppSelector, useAppDispatch];\n});\n\n_c = TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/home/reut/practice-redux/src/store/Todoes.tsx"],"names":["React","useAppSelector","useAppDispatch","changeDone","selectTodo","selectUserName","TodoList","todo","userName","dispatch","map","i","console","log","title","done"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,EAAyBC,cAAzB,QAA+C,SAA/C;AACA,SAASC,UAAT,EAA0DC,UAA1D,EAAsEC,cAAtE,QAA4F,SAA5F;;AAEA,OAAO,MAAMC,QAAkB,GAAG,MAAM;AAAA;;AAEpC,QAAMC,IAAI,GAAGN,cAAc,CAACG,UAAD,CAA3B;AACA,QAAMI,QAAQ,GAAGP,cAAc,CAACI,cAAD,CAA/B;AACA,QAAMI,QAAQ,GAAGP,cAAc,EAA/B;AAEA,sBACI;AAAA,yBACWM,QADX,EAEKD,IAAI,CAACG,GAAL,CAAS,CAACH,IAAD,EAAOI,CAAP,kBAAa;AAAA,iBAClBC,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBN,IAAtB,CADkB,aAEXA,IAAI,CAACO,KAFM,oBAGpB;AAAQ,QAAA,OAAO,EAAI,MAAML,QAAQ,CAACN,UAAU,CAACI,IAAI,CAACQ,IAAN,CAAX,CAAjC;AAAA,8BAAkER,IAAI,CAACQ,IAAL,GAAY,MAAZ,GAAqB,UAAvF;AAAA;AAAA;AAAA;AAAA;AAAA,cAHoB;AAAA,OAAUJ,CAAV;AAAA;AAAA;AAAA;AAAA,YAAtB,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CAhBM;;GAAML,Q;UAEIL,c,EACIA,c,EACAC,c;;;KAJRI,Q","sourcesContent":["import React from \"react\";\nimport { useAppSelector, useAppDispatch } from \"./hooks\";\nimport { changeDone, changeUserName, addTodo, deleteTodo, selectTodo, selectUserName } from \"./slice\";\n\nexport const TodoList: React.FC = () => {\n\n    const todo = useAppSelector(selectTodo)\n    const userName = useAppSelector(selectUserName)\n    const dispatch = useAppDispatch();\n\n    return (\n        <div>\n            user: {userName}\n            {todo.map((todo, i) => <div key={i}>\n                {console.log('todo: ', todo)}\n                title: {todo.title}, \n               <button onClick = {() => dispatch(changeDone(todo.done))}> done: {todo.done ? \"done\" : \"not done\"} </button>\n            </div>)}\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}