{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst todos = [{\n  title: \"a\",\n  done: true\n}, {\n  title: \"b\",\n  done: false\n}, {\n  title: \"c\",\n  done: true\n}];\nconst initialState = {\n  userName: \"aaa\",\n  todoList: todos\n};\nexport const todoSlice = createSlice({\n  name: \"todoList\",\n  initialState,\n  reducers: {\n    changeDone: (state, action) => {\n      state.todoList[action.payload].done = !state.todoList[action.payload].done;\n    },\n    changeUserName: (state, action) => {\n      state.userName = action.payload;\n    },\n    addTodo: (state, action) => {\n      state.todoList.push({\n        title: action.payload,\n        done: false\n      });\n    },\n    deleteTodo: (state, action) => {\n      state.todoList.splice(action.payload, 1);\n    }\n  }\n});\nexport default todoSlice.reducer;\nexport const {\n  changeDone,\n  changeUserName,\n  addTodo,\n  deleteTodo\n} = todoSlice.actions;\nexport const selectTodo = state => state.list.todoList;\nexport const selectUserName = state => state.list.userName;","map":{"version":3,"sources":["/home/reut/practice-redux/src/store/slice.ts"],"names":["createSlice","todos","title","done","initialState","userName","todoList","todoSlice","name","reducers","changeDone","state","action","payload","changeUserName","addTodo","push","deleteTodo","splice","reducer","actions","selectTodo","list","selectUserName"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAQA,MAAMC,KAAK,GAAG,CACV;AAAEC,EAAAA,KAAK,EAAE,GAAT;AAAcC,EAAAA,IAAI,EAAE;AAApB,CADU,EAEV;AAAED,EAAAA,KAAK,EAAE,GAAT;AAAcC,EAAAA,IAAI,EAAE;AAApB,CAFU,EAGV;AAAED,EAAAA,KAAK,EAAE,GAAT;AAAcC,EAAAA,IAAI,EAAE;AAApB,CAHU,CAAd;AAMA,MAAMC,YAAqB,GAAG;AAC1BC,EAAAA,QAAQ,EAAE,KADgB;AAE1BC,EAAAA,QAAQ,EAAEL;AAFgB,CAA9B;AAKA,OAAO,MAAMM,SAAS,GAAGP,WAAW,CAChC;AACIQ,EAAAA,IAAI,EAAE,UADV;AAEIJ,EAAAA,YAFJ;AAGIK,EAAAA,QAAQ,EAAE;AACNC,IAAAA,UAAU,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC3BD,MAAAA,KAAK,CAACL,QAAN,CAAeM,MAAM,CAACC,OAAtB,EAA+BV,IAA/B,GAAsC,CAACQ,KAAK,CAACL,QAAN,CAAeM,MAAM,CAACC,OAAtB,EAA+BV,IAAtE;AACH,KAHK;AAINW,IAAAA,cAAc,EAAE,CAACH,KAAD,EAAQC,MAAR,KAAmB;AAC/BD,MAAAA,KAAK,CAACN,QAAN,GAAiBO,MAAM,CAACC,OAAxB;AACH,KANK;AAONE,IAAAA,OAAO,EAAE,CAACJ,KAAD,EAAQC,MAAR,KAAmB;AACxBD,MAAAA,KAAK,CAACL,QAAN,CAAeU,IAAf,CAAoB;AAChBd,QAAAA,KAAK,EAAEU,MAAM,CAACC,OADE;AAEhBV,QAAAA,IAAI,EAAE;AAFU,OAApB;AAIH,KAZK;AAaNc,IAAAA,UAAU,EAAE,CAACN,KAAD,EAAQC,MAAR,KAAmB;AAC3BD,MAAAA,KAAK,CAACL,QAAN,CAAeY,MAAf,CAAsBN,MAAM,CAACC,OAA7B,EAAsC,CAAtC;AACH;AAfK;AAHd,CADgC,CAA7B;AAwBP,eAAeN,SAAS,CAACY,OAAzB;AAEA,OAAO,MAAM;AAAET,EAAAA,UAAF;AAAcI,EAAAA,cAAd;AAA8BC,EAAAA,OAA9B;AAAuCE,EAAAA;AAAvC,IAAsDV,SAAS,CAACa,OAAtE;AAEP,OAAO,MAAMC,UAAU,GAAIV,KAAD,IAAsBA,KAAK,CAACW,IAAN,CAAWhB,QAApD;AACP,OAAO,MAAMiB,cAAc,GAAIZ,KAAD,IAAsBA,KAAK,CAACW,IAAN,CAAWjB,QAAxD","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\"\nimport { RootState } from \"./store\"\n\ninterface TodoInt {\n    userName: string,\n    todoList: { title: string, done: boolean }[]\n}\n\nconst todos = [\n    { title: \"a\", done: true },\n    { title: \"b\", done: false },\n    { title: \"c\", done: true }\n]\n\nconst initialState: TodoInt = {\n    userName: \"aaa\",\n    todoList: todos\n}\n\nexport const todoSlice = createSlice(\n    {\n        name: \"todoList\",\n        initialState,\n        reducers: {\n            changeDone: (state, action) => {\n                state.todoList[action.payload].done = !state.todoList[action.payload].done;\n            },\n            changeUserName: (state, action) => {\n                state.userName = action.payload\n            },\n            addTodo: (state, action) => {\n                state.todoList.push({\n                    title: action.payload,\n                    done: false\n                })\n            },\n            deleteTodo: (state, action) => {\n                state.todoList.splice(action.payload, 1);\n            }\n        }\n    }\n)\n\nexport default todoSlice.reducer;\n\nexport const { changeDone, changeUserName, addTodo, deleteTodo } = todoSlice.actions;\n\nexport const selectTodo = (state: RootState) => state.list.todoList;\nexport const selectUserName = (state: RootState) => state.list.userName;"]},"metadata":{},"sourceType":"module"}