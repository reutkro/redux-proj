{"ast":null,"code":"// A mock function to mimic making an async request for data\nconst todos = [{\n  title: \"g\",\n  done: true\n}, {\n  title: \"be\",\n  done: false\n}, {\n  title: \"ct\",\n  done: true\n}];\nexport function fetchTodos() {\n  let amount = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : todos;\n  return new Promise(resolve => setTimeout(() => resolve({\n    data: amount\n  }), 500));\n}","map":{"version":3,"sources":["/home/reut/practice-redux/src/store/todoAPI.ts"],"names":["todos","title","done","fetchTodos","amount","Promise","resolve","setTimeout","data"],"mappings":"AAAA;AACA,MAAMA,KAAK,GAAG,CACV;AAAEC,EAAAA,KAAK,EAAE,GAAT;AAAcC,EAAAA,IAAI,EAAE;AAApB,CADU,EAEV;AAAED,EAAAA,KAAK,EAAE,IAAT;AAAeC,EAAAA,IAAI,EAAE;AAArB,CAFU,EAGV;AAAED,EAAAA,KAAK,EAAE,IAAT;AAAeC,EAAAA,IAAI,EAAE;AAArB,CAHU,CAAd;AAMA,OAAO,SAASC,UAAT,GAAoC;AAAA,MAAhBC,MAAgB,uEAAPJ,KAAO;AACvC,SAAO,IAAIK,OAAJ,CAA2DC,OAAD,IAC/DC,UAAU,CAAC,MAAMD,OAAO,CAAC;AAAEE,IAAAA,IAAI,EAAEJ;AAAR,GAAD,CAAd,EAAkC,GAAlC,CADL,CAAP;AAGD","sourcesContent":["// A mock function to mimic making an async request for data\nconst todos = [\n    { title: \"g\", done: true },\n    { title: \"be\", done: false },\n    { title: \"ct\", done: true }\n]\n\nexport function fetchTodos(amount = todos) {\n    return new Promise<{ data: { title: string, done: boolean }[] }>((resolve) =>\n      setTimeout(() => resolve({ data: amount }), 500)\n    );\n  }\n  "]},"metadata":{},"sourceType":"module"}